@inject NavigationManager NavigationManager

@* <div class="col">
    <div class="card" style="width: 16rem;">
        <img class="card-img-top" src="@($"/images/emotes/{Emote.EmoteId}.png")" alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title">@Emote.Name</h5>
            <p class="card-text">@Emote.Description</p>
            <button type="button" class="btn btn-outline-info" @onclick="@(async () => await EmoteQuickViewClicked.InvokeAsync(Emote))">Quick Info</button>
            <a href="@($"/emotedetail/{Emote.EmoteId}")" class="btn btn-outline-secondary">Full Info</a>
        </div>
    </div>
</div> *@
@if (Emote.Trending)
{
    <div class="col">
        <div class="flip-card-Tendencias">
            <div class="flip-card-inner">
                <div class="flip-card-front">
                    <img class="card-img-top" src="@Emote.ImageName" alt="Card image cap">
                    <p class="titleCard">@Emote.Name</p>
                </div>
                <div class="flip-card-back">
                    <div class="flip-card-content-top">
                        <button class="BtnFire" @onclick="@(async () => await EmoteTrendPopUp.InvokeAsync(Emote))">

                            <div class="sign">
                                <div class="fire">
                                    <div class="fire-left">
                                        <div class="main-fire"></div>
                                        <div class="particle-fire"></div>
                                    </div>
                                    <div class="fire-center">
                                        <div class="main-fire"></div>
                                        <div class="particle-fire"></div>
                                    </div>
                                    <div class="fire-right">
                                        <div class="main-fire"></div>
                                        <div class="particle-fire"></div>
                                    </div>
                                    <div class="fire-bottom">
                                        <div class="main-fire"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="text">@Emote.NumDownload</div>
                        </button>
                    </div>

                    <p class="cardText">@Emote.Description.ToLower()</p>
                    <a class="editBtn" href="@($"/emoteedit/{Emote.EmoteId}")">
                        <svg height="1em" viewBox="0 0 512 512">
                            <path d="M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"></path>
                        </svg>
                    </a>
                    <button class="buttonOptCards" @onclick="@(() => NavigationManager.NavigateTo($"/emotedetail/{Emote.EmoteId}"))">Full Info</button>
                    <button class="buttonOptCards buttonOptCards-alarm" type="button" @onclick="@(async () => await EmoteQuickViewClicked.InvokeAsync(Emote))">Quick Info</button>

                </div>
            </div>
        </div>

    </div>

}
else
{
    <div class="col">
        <div class="flip-card">
            <div class="flip-card-inner">
                <div class="flip-card-front">
                    <img class="card-img-top" src="@Emote.ImageName" alt="Card image cap">
                    <p class="titleCard">@Emote.Name</p>
                </div>
                <div class="flip-card-back">
                    <p class="cardText">@Emote.Description.ToLower()</p>
                    <a class="editBtn" href="@($"/emoteedit/{Emote.EmoteId}")">
                        <svg height="1em" viewBox="0 0 512 512">
                            <path d="M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"></path>
                        </svg>
                    </a>
                    <button class="buttonOptCards" @onclick="@(() => NavigationManager.NavigateTo($"/emotedetail/{Emote.EmoteId}"))">Full Info</button>
                    <button class="buttonOptCards buttonOptCards-alarm" type="button" @onclick="@(async () => await EmoteQuickViewClicked.InvokeAsync(Emote))">Quick Info</button>

                </div>
            </div>
        </div>

    </div>

}
